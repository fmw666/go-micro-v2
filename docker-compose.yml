version: '3.5'
# 网络配置
networks:
  backend:
    driver: ${NETWORKS_DRIVER}

# 服务容器配置
services:
  golang:
    build: ./
    environment:
      - TZ=${TZ}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - CONSUL_HOST=consul
      - CONSUL_PORT=${CONSUL_PORT}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    privileged: true
    volumes:
      - ${CODE_PATH_HOST}:${CODE_PATH_CONTAINER}
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
    depends_on:
      - mysql
    dns:
      - 114.114.114.114
      - 8.8.8.8
    stdin_open: true
    tty: true
    networks:
      - backend
    restart: always

  mysql:
    image: mysql:8.0.23
    environment:
      - TZ=${TZ}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    privileged: true
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_PORT}"
    networks:
      - backend
    restart: always

  mysql-manage:
    image: phpmyadmin/phpmyadmin
    environment:
      - TZ=${TZ}
      - PMA_ARBITRARY=1
      - MYSQL_USER=${MYSQL_MANAGE_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_MANAGE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_MANAGE_ROOT_PASSWORD}
      - PMA_HOST=${MYSQL_MANAGE_CONNECT_HOST}
      - PMA_PORT=${MYSQL_MANAGE_CONNECT_PORT}
    ports:
      - "${MYSQL_MANAGE_HOST_PORT}:80"
    depends_on:
      - mysql
    networks:
      - backend
    restart: always

  consul:
    image: consul:1.12
    container_name: consul
    environment:
      - TZ=${TZ}
      - ALLOW_NONE_AUTHENTICATION=yes
      - CONSUL_ADVERTISE_CLIENT_URLS=http://consul:${CONSUL_PORT}
    ports:
      - "${CONSUL_HOST_PORT}:${CONSUL_PORT}"
    command: "agent -server -ui -bootstrap-expect=1 -client=0.0.0.0"
    networks:
      - backend
    restart: always
  
  rabbitmq:
    image: rabbitmq:3.9.7-management
    container_name: rabbitmq
    environment:
      - TZ=${TZ}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_HOST_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_HOST_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    networks:
      - backend
    restart: always
