syntax="proto3";
package service;
option go_package ="./;service";

message OrderListRequest{
  // @inject_tag: json:"offset" form:"offset" uri:"offset"
  uint32 offset = 1;
  // @inject_tag: json:"limit" form:"limit" uri:"limit"
  uint32 limit = 2;
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  uint32 user_id = 3;
}

message OrderCreateRequest{
  // @inject_tag: json:"name" form:"name" uri:"name"
  string name = 1;
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  uint32 user_id = 2;
}

message OrderResponse{
  // @inject_tag: json:"id"
  uint32 id=1;
  // @inject_tag: json:"name"
  string name=2;
  // @inject_tag: json:"user_id"
  uint32 user_id=3;
  // @inject_tag: json:"created_at"
  string created_at=4;
  // @inject_tag: json:"updated_at"
  string updated_at=5;
}

message PageInfo{
  // @inject_tag: json:"total"
  uint32 total=1;
  // @inject_tag: json:"offset"
  uint32 offset=2;
  // @inject_tag: json:"limit"
  uint32 limit=3;
}

message OrderListResponse{
  // @inject_tag: json:"data"
  repeated OrderResponse data=1;
  // @inject_tag: json:"page_info"
  PageInfo page_info=2;
  // @inject_tag: json:"code"
  uint32 code=3;
  // @inject_tag: json:"message,omitempty"
  string message=4;
}

message OrderCreateResponse{
  // @inject_tag: json:"data"
  OrderResponse data=1;
  // @inject_tag: json:"code"
  uint32 code=2;
  // @inject_tag: json:"message,omitempty"
  string message=3;
}

service OrderService{
  rpc GetOrderList(OrderListRequest) returns(OrderListResponse);
  rpc CreateOrder(OrderCreateRequest) returns(OrderCreateResponse);
}
